import*as THREE from"https://cdn.jsdelivr.net/npm/three@0.118/build/three.module.js";import{OrbitControls}from"https://cdn.jsdelivr.net/npm/three@0.118/examples/jsm/controls/OrbitControls.js";import{FBXLoader}from"https://cdn.jsdelivr.net/npm/three@0.118.1/examples/jsm/loaders/FBXLoader.js";import{GLTFLoader}from"https://cdn.jsdelivr.net/npm/three@0.118.1/examples/jsm/loaders/GLTFLoader.js";const modelDiv=document.querySelector("#canvas");class BasicWorldDemo{constructor(){this._Initialize()}_Initialize(){this._threejs=new THREE.WebGLRenderer({antialias:!0}),this._threejs.shadowMap.enabled=!0,this._threejs.shadowMap.type=THREE.PCFSoftShadowMap,this._threejs.setPixelRatio(window.devicePixelRatio),this._threejs.setSize(window.innerWidth,window.innerHeight),modelDiv.appendChild(this._threejs.domElement),window.addEventListener("resize",()=>{this._OnWindowResize()},!1),window.addEventListener("orientationchange",()=>{this._OnWindowResize(),screen.width<500?this._camera.position.set(50,40,76):this._camera.position.set(50,40,32),this._camera.updateProjectionMatrix()},!1);const fov=60,aspect=1920/1080,near=1,far=2e3;this._camera=new THREE.PerspectiveCamera(60,aspect,1,2e3),screen.width<500?this._camera.position.set(50,40,76):this._camera.position.set(50,40,32),this._camera.aspect=window.innerWidth/window.innerHeight,this._camera.updateProjectionMatrix(),this._scene=new THREE.Scene;let light=new THREE.DirectionalLight(16777215,.8);light.position.set(200,300,400),light.target.position.set(0,0,0),light.shadow.bias=-.001,light.shadow.mapSize.width=2048,light.shadow.mapSize.height=2048,light.shadow.camera.near=.1,light.shadow.camera.far=500,light.shadow.camera.near=.5,light.shadow.camera.far=500,light.shadow.camera.left=100,light.shadow.camera.right=-100,light.shadow.camera.top=100,light.shadow.camera.bottom=-100,this._scene.add(light),light=new THREE.AmbientLight(4210752),this._scene.add(light);const controls=new OrbitControls(this._camera,this._threejs.domElement);controls.target.set(0,0,0),this.orbitControls=controls,this.orbitControls.minDistance=50,this.orbitControls.maxDistance=180,this.orbitControls.enablePan=!1,this.orbitControls.enableDamping=!0,this.orbitControls.autoRotate=!0,this.orbitControls.autoRotateSpeed=1,this.orbitControls.rotateSpeed=.2,this.orbitControls.zoomSpeed=.45,this.orbitControls.update();const bgTextureSource="../assets/skyBox/eso_dark.min.jpeg",bgLoader=new THREE.TextureLoader,bgTexture=bgLoader.load(bgTextureSource),bgGeometry=new THREE.SphereGeometry(300,32,20),bgMaterial=new THREE.MeshBasicMaterial({map:bgTexture,side:THREE.BackSide}),bgSphere=new THREE.Mesh(bgGeometry,bgMaterial);this._scene.bgSphere=bgSphere,this._scene.add(bgSphere);let urlSelection,selection=window.location.href.toString().split("/").pop().split("#").pop(),bodyTexture;switch(selection){case"mars":bodyTexture="../assets/sphere/mars.min.jpeg";break;case"moon":bodyTexture="../assets/sphere/moon.min.jpeg";break;case"mercury":bodyTexture="../assets/sphere/mercury.min.jpeg";break;case"venus":bodyTexture="../assets/sphere/venus.min.jpeg";break;case"jupiter":bodyTexture="../assets/sphere/jupiter.min.jpeg";break;case"saturn":this._LoadModel("../assets/sphere/Saturn.glb",0,8,0);break;case"uranus":bodyTexture="../assets/sphere/uranus.min.jpeg";break;case"neptune":bodyTexture="../assets/sphere/neptune.min.jpeg";break;case"pluto":bodyTexture="../assets/sphere/pluto.min.jpeg";break;case"sun":bodyTexture="../assets/sphere/sun.min.jpeg";break;case"earth":default:bodyTexture="../assets/sphere/earth_atmos_4096.min.jpeg"}let textureSource=bodyTexture,texture;const textureLoader=new THREE.TextureLoader;if(textureSource){texture=textureLoader.load(textureSource);const geometry=new THREE.SphereGeometry(24,32,32),material=new THREE.MeshBasicMaterial({map:texture});material.roughness=.5,material.flatShading=!1;const sphere=new THREE.Mesh(geometry,material);this._scene.sphere=sphere,sphere.castShadow=!1,sphere.receiveShadow=!0,sphere.rotation.y=-Math.PI/2,"saturn"!==selection&&this._scene.add(sphere)}this._RAF()}_LoadModel(path,x,y,z){const loader=new GLTFLoader;loader.load(path,gltf=>{gltf.scene.traverse(c=>{c.isMesh&&c.geometry.center(),c.position.set(x,y,z)}),gltf.scene.scale.multiplyScalar(.035),this._scene.add(gltf.scene)})}_OnWindowResize(){this._camera.aspect=window.innerWidth/window.innerHeight,this._camera.updateProjectionMatrix(),this._threejs.setSize(window.innerWidth,window.innerHeight)}_RAF(){requestAnimationFrame(()=>{this._threejs.render(this._scene,this._camera),this.orbitControls.update(),this._RAF()})}}let _APP=null;window.addEventListener("DOMContentLoaded",()=>{_APP=new BasicWorldDemo;const refresh=event=>{location.reload()},dropdown=document.querySelector(".dropdown-menu");dropdown.addEventListener("click",()=>setTimeout(refresh,1))});